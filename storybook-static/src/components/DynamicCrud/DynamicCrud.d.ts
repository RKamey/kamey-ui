import { ApiConfig } from '../DynamicForm/DynamicForm';
import { ActionConfig, ColumnsProps, CustomFilters, ExcelConfigProps, MoreActions, SearchConfig, ThemeConfig } from '../DynamicTable/types';
import { FormField } from '../DynamicForm/types';
import { ReactElement, ReactNode } from '../../../node_modules/react';
type OnCreateHandler<T = Record<string, unknown>> = ((values: T) => void) | (() => void);
export interface DynamicCrudProps<T = Record<string, unknown>> {
    title?: string | ReactElement;
    formTitle?: string | ReactElement;
    formTitles?: string[];
    description?: string | ReactElement;
    formDescription?: string | ReactElement;
    columns: ColumnsProps<T>[];
    data?: T[];
    fields: FormField[];
    showCreateButton?: boolean;
    createButtonText?: string;
    createButtonIcon?: ReactElement;
    submitButtonText?: string;
    icon?: ReactElement;
    layout?: "horizontal" | "vertical";
    actionConfig?: ActionConfig;
    searchConfig?: SearchConfig<T>;
    showRefreshButton?: boolean;
    onRefresh?: () => void;
    headerDirection?: "horizontal" | "vertical";
    loading?: boolean;
    onCreate?: OnCreateHandler;
    createRedirect?: boolean;
    onEdit?: (record: T) => void;
    onDelete?: (record: T) => void;
    onView?: (record: T) => void;
    apiConfig?: ApiConfig;
    initialData?: T;
    themeConfig?: ThemeConfig;
    moreActions?: MoreActions<T>[];
    customFilters?: CustomFilters[];
    formCols?: 1 | 2 | 3 | 4;
    formCustomCols?: boolean;
    showView?: boolean;
    exportToExcel?: ExcelConfigProps<T>;
    backButton?: boolean | ReactElement;
    showSearchBar?: boolean;
    disableWrapper?: boolean;
}
export declare const DynamicCrud: <T extends Record<string, unknown>>({ columns, data, title, formTitle, formTitles, description, formDescription, fields, showCreateButton, createButtonText, createButtonIcon, icon, layout, actionConfig, searchConfig, headerDirection, showRefreshButton, onRefresh, loading, onCreate, createRedirect, onEdit, onDelete, onView, submitButtonText, apiConfig, initialData, themeConfig, moreActions, formCols, formCustomCols, exportToExcel, backButton, showSearchBar, customFilters, disableWrapper }: DynamicCrudProps<T>) => ReactNode;
export {};
